EXPLANATION :

-- A BFS keeps a queue of item that have been discovered and are yet to be visited,
and then repeatedly visits the front vertex on the queue, discovering all of its neighbours
and adding those to the back of the queue. This means that the earlier a item is discovered,
the earlier it is visited, giving the 'breadth-first' shape of the search.

-- A DFS simply replaces the queue of the BFS with a stack,
so that newly discovered vertices are visited right away,
and vertices discovered longer ago are only returned to once
the new vertices have been visited. This causes the search to
'dive' right to the end of the first search path before considering any other vertices.

-- For my program the data structure used is list.
BFS and DFS variation depends upon the way child's are merged with previously crawled node list.

-- Comparison

Algo    Total Urls Crawled
BFS     1000
DFS     678

BFS Top 5 urls :
***********************************************************
https://en.wikipedia.org/wiki/Sustainable_energy
https://en.wikipedia.org/wiki/Passive_solar_building_design
https://en.wikipedia.org/wiki/Solar_energy
https://en.wikipedia.org/wiki/Solar_heating
https://en.wikipedia.org/wiki/Solar_photovoltaics

DFS Top 5 urls :
***********************************************************
https://en.wikipedia.org/wiki/Sustainable_energy
https://en.wikipedia.org/wiki/Passive_solar_building_design
https://en.wikipedia.org/wiki/Solar_energy
https://en.wikipedia.org/wiki/Solar_Energy_(journal)
https://en.wikipedia.org/wiki/Solar_heating
